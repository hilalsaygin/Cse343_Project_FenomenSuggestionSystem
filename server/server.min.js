'use strict';const mongodb=require("mongodb"),mongoose=require("mongoose"),Tour=require("./models/tours"),fs=require("fs"),app=require("./app"),databaseUrl="mongodb+srv://Influencer:influenceR.7590@influencer.z5lsmky.mongodb.net/Influencer?retryWrites=true&w=majority",connectToMongoDB=async()=>{try{await mongoose.connect(databaseUrl,{useNewUrlParser:!0,useUnifiedTopology:!0}),console.log("Connected to MongoDB!")}catch(a){console.error(a)}};async function main(){await connectToMongoDB()}main();
const tours=JSON.parse(fs.readFileSync(`${__dirname}/dev-data/data/userinfo.json`,"utf-8")),importData=async()=>{try{await Tour.insertMany(tours),console.log("Data successfully loaded!")}catch(a){console.log(a)}process.exit()},deleteData=async()=>{try{await Tour.deleteMany(),console.log("Data successfully delated!")}catch(a){console.log(a)}process.exit()},dataUpdate=async()=>{try{const a=await Tour.find({}).sort("-IGI");await Tour.deleteMany();await Tour.insertMany(a);console.log("Data successfully updated!!")}catch(a){console.log(a)}process.exit()};
"--import"===process.argv[2]?importData():"--update"===process.argv[2]?dataUpdate():"--delete"===process.argv[2]&&deleteData();const port=process.env.port||3E3;app.listen(port,()=>{console.log(`App running on port ${port}...`)});